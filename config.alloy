
livedebugging {
  enabled = true
}

otelcol.receiver.otlp "default" {
  http {}
  grpc {}

  output {
    metrics = [otelcol.processor.batch.default.input]
    logs    = [otelcol.processor.batch.default.input]
    traces  = [otelcol.connector.spanmetrics.default.input,
               otelcol.processor.batch.default.input]
  }
}

otelcol.connector.spanmetrics "default" {

  // https://grafana.com/docs/alloy/latest/reference/components/otelcol.connector.spanmetrics/
	dimension {
		name = "service.version"
	}

	histogram {
		explicit {
			buckets = ["0s", "0.005s", "0.01s", "0.025s", "0.05s", "0.075s", "0.1s", "0.25s", "0.5s", "0.75s", "1s", "2.5s", "5s", "7.5s", "10s"]
		}
		unit = "s"
	}

  dimensions_cache_size = 333

  // The period on which all metrics (whose dimension keys remain in cache) will be emitted.
  metrics_flush_interval = "30s"

  output {
    metrics = [otelcol.processor.transform.default.input]
  }
}

otelcol.processor.transform "default" {
  error_mode = "ignore"

  metric_statements {
    context = "datapoint"
    statements = [
      // "insert" means that a metric datapoint attribute will be inserted
      // only if an attribute with the same key does not already exist.
      `merge_maps(attributes, resource.attributes, "insert")`,
    ]
  }

  output {
    metrics = [otelcol.processor.transform.test.input]
  }
}


otelcol.processor.transform "test" {
  output {
    metrics = [otelcol.processor.batch.default.input]
  }
}

otelcol.processor.batch "default" {
	output {
		metrics = [otelcol.exporter.otlphttp.grafana_cloud.input]
		logs    = [otelcol.exporter.otlphttp.grafana_cloud.input]
		traces  = [otelcol.exporter.otlphttp.grafana_cloud.input]
	}
}

otelcol.exporter.otlphttp "grafana_cloud" {
	client {
		endpoint = "https://otlp-gateway-prod-eu-west-2.grafana.net/otlp"
		auth     = otelcol.auth.basic.grafana_cloud.handler
	}

  debug_metrics {
    disable_high_cardinality_metrics = false
  }
}

otelcol.auth.basic "grafana_cloud" {
	username = "(your grafana cloud OTEL endpoint)"
	password = "(Grafana cloud auth with write permissions)"
}
