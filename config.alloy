
livedebugging {
  enabled = true
}

faro.receiver "integrations_app_agent_receiver" {

	server {
		listen_address           = "0.0.0.0"
		listen_port              = "8027"
		cors_allowed_origins     = ["*"]
		max_allowed_payload_size = "10MiB"

		rate_limiting {
			rate = 50
		}
	}

	sourcemaps { }

	output {
		traces = [otelcol.connector.spanmetrics.default.input,
              otelcol.processor.batch.default.input]
	}
}

otelcol.connector.spanmetrics "default" {

  // https://grafana.com/docs/alloy/latest/reference/components/otelcol.connector.spanmetrics/
	dimension {
		name = "service.namespace"
	}

	dimension {
		name = "service.version"
	}

	dimension {
		name = "deployment.environment"
	}

	dimension {
		name = "k8s.cluster.name"
	}

	dimension {
		name = "k8s.namespace.name"
	}

	dimension {
		name = "cloud.region"
	}

	dimension {
		name = "cloud.availability_zone"
	}

	histogram {
		explicit {
			buckets = ["0s", "0.005s", "0.01s", "0.025s", "0.05s", "0.075s", "0.1s", "0.25s", "0.5s", "0.75s", "1s", "2.5s", "5s", "7.5s", "10s"]
		}
		unit = "s"
	}

  dimensions_cache_size = 333

  aggregation_temporality = "DELTA"

  // The period on which all metrics (whose dimension keys remain in cache) will be emitted.
  metrics_flush_interval = "30s"

  namespace = "test.namespace"

  output {
    metrics = [otelcol.processor.transform.test.input]
  }
}

otelcol.processor.transform "test" {
  output {
    metrics = [otelcol.processor.batch.default.input]
  }
}

otelcol.processor.batch "default" {
	output {
		metrics = [otelcol.exporter.otlphttp.grafana_cloud.input]
		logs    = [otelcol.exporter.otlphttp.grafana_cloud.input]
		traces  = [otelcol.exporter.otlphttp.grafana_cloud.input]
	}
}

otelcol.exporter.otlphttp "grafana_cloud" {
	client {
		endpoint = "https://otlp-gateway-prod-eu-west-2.grafana.net/otlp"
		auth     = otelcol.auth.basic.grafana_cloud.handler
	}

  debug_metrics {
    disable_high_cardinality_metrics = false
  }
}

otelcol.auth.basic "grafana_cloud" {
	username = "redacted"
	password = "redacted"
}
